Policy:
   curl -O https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.7.2/docs/install/iam_policy.json

  aws iam create-policy \
    --policy-name rr-cluster1-ingress-policy \
    --policy-document file://iam_policy.json


  ##output: arn:aws:iam::585008071590:policy/rr-cluster1-ingress-policy

---
eksctl:

  eksctl utils associate-iam-oidc-provider --region=ap-southeast-2 --cluster=rr-cluster1 --approve

  eksctl create iamserviceaccount \
  --cluster=rr-cluster1 --region=ap-southeast-2 \
  --namespace=kube-system \
  --name=aws-load-balancer-controller \
  --role-name rr-cluster1-ingress-role \
  --attach-policy-arn=arn:aws:iam::585008071590:policy/rr-cluster1-ingress-policy \
  --approve

cert-manager:
  kubectl apply \
    --validate=false \
    -f https://github.com/jetstack/cert-manager/releases/download/v1.13.5/cert-manager.yaml

AWS Load Balancer Controller:
  curl -Lo v2_7_2_full.yaml https://github.com/kubernetes-sigs/aws-load-balancer-controller/releases/download/v2.7.2/v2_7_2_full.yaml
  sed -i.bak -e '596,604d' ./v2_7_2_full.yaml

  sed -i.bak -e 's|your-cluster-name|rr-cluster1|' ./v2_7_2_full.yaml
  kubectl apply -f v2_7_2_full.yaml
  curl -Lo v2_7_2_ingclass.yaml https://github.com/kubernetes-sigs/aws-load-balancer-controller/releases/download/v2.7.2/v2_7_2_ingclass.yaml
  kubectl apply -f v2_7_2_ingclass.yaml

Verify:
  kubectl get deployment -n kube-system aws-load-balancer-controller
  kubectl get pods -n kube-system
  kubectl logs -f aws-load-balancer-controller-6b7fd57b48-hvvf5

  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  INGRESS SERVICE MANIFEST

  ----------------------------------------------------------------------------------------------------------------------------------------------------------------------

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-srv
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: home-service
              port:
                number: 8080
        - path: /laptop/
          pathType: Prefix
          backend:
            service:
              name: laptop-service
              port:
                number: 8081
        - path: /mobile/
          pathType: Prefix
          backend:
            service:
              name: mobile-service
              port:
                number: 8082


  
